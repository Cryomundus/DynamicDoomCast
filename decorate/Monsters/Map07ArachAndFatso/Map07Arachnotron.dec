//test

Actor TierOneArachToken : Inventory
{
	Inventory.MaxAmount 1
}

Actor TierTwoArachToken : Inventory
{
	Inventory.MaxAmount 1
}


Actor TierThreeArachToken : Inventory
{
	Inventory.MaxAmount 1
}


Actor TierSpecialArachToken : Inventory
{
	Inventory.MaxAmount 1
}

Actor RailTypeOneArachToken : Inventory
{
	Inventory.MaxAmount 1
}

Actor RailTypeTwoArachToken : Inventory
{
	Inventory.MaxAmount 1
}

Actor RailTypeThreeArachToken : Inventory
{
	Inventory.MaxAmount 1
}

Actor BuffHPToken : Inventory
{
	Inventory.MaxAmount 1
}


ACTOR Map07Arachnid : ArachnotronModStatesinheritor replaces Arachnotron
{
	Game Doom
	//SpawnID 6
	Health 500
	Radius 64
	Height 64
	Mass 600
	Speed 12
	PainChance 128
	Monster
	PainChance "Head", 255
	DamageFactor "Head", 2
	DamageFactor "Scrapper", 3.0
	Damagefactor "MonsterBeatEmUp", 7.4
	-THRUSPECIES
	+NOBLOCKMONST
	+NOBLOCKMONST
	+FLOORCLIP
	+BOSSDEATH
	SeeSound "baby/sight"
	PainSound "baby/pain"
	DeathSound "baby/death"
	ActiveSound "baby/active"
	Obituary "$OB_BABY"
	species "Arach"
	+DontHarmSpecies
	
	//Since Map07 has a weird, weird gimmick, I've done an equally weird thing
	//If this looks unneccessarily weird as heck, that's basically because it is.
	
	Var int user_ArachTierCheck;
	Var int user_SetRailType;
	Var int user_CheckHealthBuff;
	Var int user_TierTypeSet;
	
	States
	{
	Spawn:
		TNT1 A 0
	SpawnCheckTier:
		TNT1 A 0 A_Log ("Entering SpawnCheckTier!")
		TNT1 A 0 ACS_NamedExecuteAlways("CheckTierForMap07",0)		
		//TNT1 A 0 A_Log ("Warning: set failed! Check yer decorate!")
		TNT1 A 0 A_Jump(256,"1Deciding")
		
	1Deciding:
		TNT1 A 0 A_Log ("Attempting to set spawn type!")
		TNT1 A 1
		loop
	SetRandom:
		TNT1 A 0 A_Log ("Random Arach Set!")
		TNT1 A 0 A_Jump(256,"Tier1Set","Tier2Set","Tier3Set","TierSSet")
		TNT1 A 0 
		goto SpawnContinue
	Tier1Set:
		TNT1 A 0 A_JumpIfInventory("TierOneArachToken", 1, "SpawnContinue")  
		TNT1 A 0 A_GiveInventory ("TierOneArachToken")
		//TNT1 A 0 A_Log ("Tier1 Arach Set!")
		goto SpawnContinue
	Tier2Set:
		TNT1 A 0 A_JumpIfInventory("TierTwoArachToken", 1, "SpawnContinue") 
		TNT1 A 0 A_GiveInventory ("TierTwoArachToken")
		//TNT1 A 0 A_Log ("Tier2 Arach Set!")
		goto SpawnContinue
	Tier3Set:
		TNT1 A 0 A_JumpIfInventory("TierThreeArachToken", 1, "SpawnContinue") 
		TNT1 A 0 A_GiveInventory ("TierThreeArachToken")
		//TNT1 A 0 A_Log ("Tier3 Arach Set!")
		goto SpawnContinue
	TierSSet:
		TNT1 A 0 A_JumpIfInventory("TierSpecialArachToken", 1, "SpawnContinue") 
		TNT1 A 0 A_GiveInventory ("TierSpecialArachToken")
		//TNT1 A 0 A_Log ("TierS Arach Set!")
		goto SpawnContinue
	
	
	
		
	SpawnContinue:
		TNT1 A 0 A_JumpIfInventory("RailTypeOneArachToken", 	1, "SpawnBeginMovement")
		TNT1 A 0 A_JumpIfInventory("RailTypeTwoArachToken", 	1, "SpawnBeginMovement")
		TNT1 A 0 A_JumpIfInventory("RailTypeThreeArachToken",	1, "SpawnBeginMovement")
		TNT1 A 0 A_JumpIfInventory("TierSpecialArachToken", 	1, "SpawnBeginMovement")
		TNT1 A 0 A_Jump(256,"SetRailTrue","SpawnBeginMovement","SpawnBeginMovement")
	
	SetRailTrue:
		TNT1 A 0 A_Log ("Entering SetRailTrue!")
		TNT1 A 0 ACS_NamedExecuteAlways("SetRailStateCheckingArachTier",0)		
		//TNT1 A 0 A_Log ("Warning: set failed! Check yer decorate!")
		TNT1 A 0 A_Jump(256,"2Deciding")
		
	2Deciding:
		TNT1 A 0 A_Log ("Attempting to set rail type!")
		TNT1 A 1
		loop

		
	SetRailTrueTier1:
		TNT1 A 0 A_Log ("Tier1 RailType Set!")
		TNT1 A 0 A_GiveInventory ("RailTypeOneArachToken")
		
		goto SpawnBeginMovement
	SetRailTrueTier2:
		TNT1 A 0 A_Log ("Tier2 RailType Set!")
		TNT1 A 0 A_GiveInventory ("RailTypeTwoArachToken")
		
		goto SpawnBeginMovement
	SetRailTrueTier3:
		TNT1 A 0 A_Log ("Tier3 RailType Set!")
		TNT1 A 0 A_GiveInventory ("RailTypeThreeArachToken")
		
		goto SpawnBeginMovement
		
	SpawnBeginMovement:
		TNT1 A 1
		TNT1 A 0 A_JumpIfInventory("TierSpecialArachToken", 1, "TierSIdle")
		TNT1 A 0 A_JumpIfInventory("TierThreeArachToken", 1, "Tier3Idle")
		TNT1 A 0 A_JumpIfInventory("TierTwoArachToken", 1, "Tier2Idle")
		TNT1 A 0 A_JumpIfInventory("TierOneArachToken", 1, "Tier1Idle")
		
		//TNT1 A 0 A_JumpIfInventory("TierOneArachToken", 1, "Tier1Idle")
		//TNT1 A 0 A_JumpIfInventory("TierTwoArachToken", 1, "Tier2Idle")
		//TNT1 A 0 A_JumpIfInventory("TierThreeArachToken", 1, "Tier3Idle")
		//TNT1 A 0 A_JumpIfInventory("TierSpecialArachToken", 1, "TierSIdle")
		
	Tier1Idle:
		//TNT1 A 0 A_Log ("Tier 1 Idle")
		RSPI AB 10 A_Look
		Loop
	Tier2Idle:
		//TNT1 A 0 A_Log ("Tier 2 Idle")
		FSPI AB 10 A_Look
		Loop
	Tier3Idle:
		//TNT1 A 0 A_Log ("Tier 3 Idle")
		ARAC AB 10 A_Look
		Loop
	TierSIdle:
		//TNT1 A 0 A_Log ("Tier S Idle")
		ARTK A 0 A_SetRoll(0)
        ARTK A 8 A_Look
        Loop
	
	
		//TNT1 A 0 A_Log ("Entering SpawnCheckTier!")
		TNT1 A 0 ACS_NamedExecuteAlways("HealthBuffStateCheckingArachTier",0)		
		//TNT1 A 0 A_Log ("Warning: set failed! Check yer decorate!")
		TNT1 A 0 A_Jump(256,"3Deciding")
		
	3Deciding:
		//TNT1 A 0 A_Log ("Attempting to set hp buff type!")
		TNT1 A 1
		loop
		
		/*
		TNT1 A 0 A_Log ("No Railtype set! Beginning attempt to set health!")
		TNT1 A 0 A_JumpIf(user_ArachTierCheck == 1, "Tier1SpawnState")
		TNT1 A 0 A_JumpIf(user_ArachTierCheck == 2, "Tier2SpawnState")
		TNT1 A 0 A_JumpIf(user_ArachTierCheck == 3, "Tier3SpawnState")
		TNT1 A 0 A_JumpIf(user_ArachTierCheck == 4, "TierSSpawnState")
		TNT1 A 0 A_Log ("Jump Failed! Defaulting to Tier1SpawnState!")
		*/
	Tier1SpawnState:
		TNT1 A 0 A_JumpIfInventory("RailTypeOneArachToken", 1, "Tier1RailHealth")  
		TNT1 A 0 A_JumpIfInventory("BuffHPToken", 1, "Tier1ContSpawn")
		TNT1 A 0 A_SetHealth(500)
		//TNT1 A 0 A_Log ("Normal HP Set!")
		TNT1 A 0 A_GiveInventory ("BuffHPToken")
		
		goto Tier1ContSpawn
	Tier1RailHealth:
		TNT1 A 0 A_JumpIfInventory("BuffHPToken", 1, "Tier1ContSpawn")
		TNT1 A 0 A_SetHealth(550)
		//TNT1 A 0 A_Log ("Rail HP Set!")
		TNT1 A 0 A_GiveInventory ("BuffHPToken")
		
	Tier1ContSpawn:
		RSPI AB 10 A_Look
		Loop
		
	Tier2SpawnState:
		TNT1 A 0 A_JumpIfInventory("RailTypeTwoArachToken", 1, "Tier2RailHealth")
		TNT1 A 0 A_JumpIfInventory("BuffHPToken", 1, "Tier2ContSpawn")
		TNT1 A 0 A_SetHealth(600)
		//TNT1 A 0 A_Log ("Normal HP Set!")
		TNT1 A 0 A_GiveInventory ("BuffHPToken")
		
		goto Tier2ContSpawn
	Tier2RailHealth:
		TNT1 A 0 A_JumpIfInventory("BuffHPToken", 1, "Tier2ContSpawn")
		TNT1 A 0 A_SetHealth(650)
		//TNT1 A 0 A_Log ("Rail HP Set!")
		TNT1 A 0 A_GiveInventory ("BuffHPToken")
		
	Tier2ContSpawn:
		RSPI AB 10 A_Look
		Loop
		
	Tier3SpawnState:
		TNT1 A 0 A_JumpIfInventory("RailTypeThreeArachToken", 1, "Tier3RailHealth")
		TNT1 A 0 A_JumpIfInventory("BuffHPToken", 1, "Tier3ContSpawn")
		TNT1 A 0 A_SetHealth(650)
		//TNT1 A 0 A_Log ("Normal HP Set!")
		TNT1 A 0 A_GiveInventory ("BuffHPToken")
		goto Tier3ContSpawn
	Tier3RailHealth:
		TNT1 A 0 A_JumpIfInventory("BuffHPToken", 1, "Tier3ContSpawn")
		TNT1 A 0 A_SetHealth(700)
		//TNT1 A 0 A_Log ("Rail HP Set!")
		TNT1 A 0 A_GiveInventory ("BuffHPToken")
		
	Tier3ContSpawn:
		RSPI AB 10 A_Look
		Loop
		
	TierSSpawnState:
		TNT1 A 0 A_JumpIfInventory("BuffHPToken", 1, "TierSContSpawn")
		TNT1 A 0 A_SetHealth(750)
		//TNT1 A 0 A_Log ("Normal HP Set!")
		TNT1 A 0 A_GiveInventory ("BuffHPToken")
		
		goto TierSContSpawn
	TierSContSpawn:
		RSPI AB 10 A_Look
		Loop
	
	See:
		TNT1 A 0 A_JumpIfInventory("TierOneArachToken",		1, "Tier1SeeState")
		TNT1 A 0 A_JumpIfInventory("TierTwoArachToken", 	1, "Tier2SeeState")
		TNT1 A 0 A_JumpIfInventory("TierThreeArachToken",	1, "Tier3SeeState")
		TNT1 A 0 A_JumpIfInventory("TierSpecialArachToken", 1, "TierSSeeState")
		
	//4Deciding:
	//	TNT1 A 0 A_Log ("Attempting to set see type!")
	//	TNT1 A 1
	//	loop
	
	
		/*
		TNT1 A 1 nodelay A_JumpIf(user_ArachTierCheck == 1, "Tier1SeeState")
		TNT1 A 1 nodelay A_JumpIf(user_ArachTierCheck == 2, "Tier2SeeState")
		TNT1 A 1 nodelay A_JumpIf(user_ArachTierCheck == 3, "Tier3SeeState")
		TNT1 A 1 nodelay A_JumpIf(user_ArachTierCheck == 4, "TierSSeeState")
		TNT1 A 0 A_Log ("Jump Failed! Defaulting to Tier1SeeState")
		*/
		
	Tier1SeeState:
		RSPI A 15
		//TNT1 A 0 A_Log ("using Tier1 See!")
		RSPI A 3 A_BabyMetal
		RSPI ABBCC 3 A_Chase
		RSPI D 3 A_BabyMetal
		RSPI DEEFF 3 A_Chase
		Goto Tier1SeeState+2
	Tier2SeeState:
		FSPI A 15
		//TNT1 A 0 A_Log ("using Tier2 See!")
		FSPI A 3 A_BabyMetal
		FSPI ABBCC 3 A_Chase
		FSPI D 3 A_BabyMetal
		FSPI DEEFF 3 A_Chase
		Goto Tier2SeeState+2
	Tier3SeeState:
		ARAC A 15
		//TNT1 A 0 A_Log ("using Tier3 See!")
		ARAC A 3 A_BabyMetal
		ARAC ABBCC 3 A_Chase
		ARAC D 3 A_BabyMetal
		ARAC DEEFF 3 A_Chase
		Goto Tier3SeeState+2
	TierSSeeState:
		//TNT1 A 0 A_Log ("using TierS See!")
		ARTK AABB 15
		ARTK A 0 A_SetRoll(0)
        ARTK A 0 A_PlaySound ("ZPTank/Run")
        ARTK AABB 3 A_Chase
        Goto TierSSeeState+1
	Missile:
		TNT1 A 0 A_JumpIfInventory("TierOneArachToken",		1, "Tier1RegMissileState")
		TNT1 A 0 A_JumpIfInventory("TierTwoArachToken", 	1, "Tier2RegMissileState")
		TNT1 A 0 A_JumpIfInventory("TierThreeArachToken",	1, "Tier3RegMissileState")
		TNT1 A 0 A_JumpIfInventory("TierSpecialArachToken", 1, "TierSRegMissileState")
		/*
		TNT1 A 0 A_Log ("Entering SpawnCheckTier!")
		TNT1 A 0 ACS_NamedExecuteAlways("MissileStateCheckingArachTier",0)		
		//TNT1 A 0 A_Log ("Warning: set failed! Check yer decorate!")
		TNT1 A 0 A_Jump(256,"5Deciding")
		
	5Deciding:
		TNT1 A 0 A_Log ("Attempting to set missile type!")
		TNT1 A 1
		loop
		
		/*
		TNT1 A 0 A_JumpIf(user_ArachTierCheck == 1, "Tier1RegMissileState")
		TNT1 A 0 A_JumpIf(user_ArachTierCheck == 2, "Tier2RegMissileState")
		TNT1 A 0 A_JumpIf(user_ArachTierCheck == 3, "Tier3RegMissileState")
		TNT1 A 0 A_JumpIf(user_ArachTierCheck == 4, "TierSRegMissileState")
		*/
		
	//Tier1 Arachnotron and Railtron
	Tier1RegMissileState:
		TNT1 A 0 A_JumpIfInventory("RailTypeOneArachToken", 1, "Tier1Rail.MissileState")
		TNT1 A 0 A_Jump(256,"Tier1MissileNormalShot","Tier1MissileNormalShot","Tier1Missile2xSplitterShot")
	Tier1Rail.MissileState:
		TNT1 A 0 A_Jump(256,"Tier1MissileRailShot","Tier1MissileRailShot","Tier1MissileRailShot")
		
	//Tier2 Scattertron and ScatterRail
	Tier2RegMissileState:
		TNT1 A 0 A_JumpIfInventory("RailTypeTwoArachToken", 1, "Tier2Rail.MissileState") 
		TNT1 A 0 A_Jump(256,"Tier2MissileNormalShot","Tier2MissileNormalShot","Tier1Missile2xSplitterShot","Tier2Missile4xSplitterShot")
	Tier2Rail.MissileState:
		TNT1 A 0 A_Jump(256,"Tier2MissileRailShot","Tier2MissileRailShot","Tier2MissileRailShot")
		
	//Tier3 	
	Tier3RegMissileState:
		TNT1 A 0 A_JumpIfInventory("RailTypeThreeArachToken", 1, "Tier3Rail.MissileState") 
		TNT1 A 0 A_Jump(256,"Tier3MissileNormalShot","Tier3MissileNormalShot","Tier3MissileHomingShot","Tier3MissileTripleShot","Tier3Missile2xSplitterShot","Tier3Missile4xSplitterShot","Tier3Missile5xSplitterShot")
	Tier3Rail.MissileState:
		TNT1 A 0 A_Jump(256,"Tier3MissileRailShot","Tier3MissileRailShot","Tier3MissileRailShot")
		
	//TierS
	TierSRegMissileState:
		TNT1 A 0 A_Jump(256,"TierSMissileStandardFire","TierSMissileStandardFire","TierSMissilePowerFire","TierSMissileRunNGun")
		
	//Tier1	
	Tier1Missile2xSplitterShot:
		RSPI A 20 BRIGHT A_FaceTarget
		RSPI G 4 BRIGHT A_CustomMissile("ArachnoPlasmaSplitter2x",16,3,0,0)
		RSPI H 4 BRIGHT
		TNT1 A 0 A_CheckSight("See")
		RSPI H 1 BRIGHT A_SpidRefire
		Goto Tier1Missile2xSplitterShot+1
	Tier1MissileNormalShot:	
		RSPI A 20 BRIGHT A_FaceTarget
		RSPI G 4 BRIGHT A_CustomMissile("ArachnotronPlasma",16,3,0,0)
		RSPI H 4 BRIGHT
		TNT1 A 0 A_CheckSight("See")
		RSPI H 1 BRIGHT A_SpidRefire
		Goto Tier1MissileNormalShot+1
	Tier1MissileRailShot:
		RSPI A 20 BRIGHT A_FaceTarget
		RSPI G 0 A_PlayweaponSound("weapons/laser")
		RSPI G 0 BRIGHT A_CustomMissile("MultiMonsterRailshot", 16, 0, random(-4,4),0)
		RSPI G 4 BRIGHT
		RSPI H 5 BRIGHT
		RSPI H 1 BRIGHT A_SpidRefire
		Goto Tier1MissileRailShot
	//Tier2
	Tier2Missile4xSplitterShot:
		FSPI A 4 A_FaceTarget
		FSPI A 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("ScatterShotSplitter4x",24,0,0)
		FSPI H 3 Bright A_CustomMissile("ScatterShotSplitter4x",24,0,15)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("ScatterShotSplitter4x",24,0,-15)
		FSPI H 3 Bright A_CustomMissile("ScatterShotSplitter4x",24,0,10)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("ScatterShotSplitter4x",24,0,-30)
		FSPI H 3 Bright A_CustomMissile("ScatterShotSplitter4x",24,0,30)
		FSPI G 0 A_FaceTarget
		FSPI H 1 Bright
		TNT1 A 0 A_CheckSight("See")
		Goto Tier2Missile4xSplitterShot+1
	Tier2Missile2xSplitterShot:
		FSPI A 4 A_FaceTarget
		FSPI A 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("ScatterShotSplitter2x",24,0,0)
		FSPI H 3 Bright A_CustomMissile("ScatterShotSplitter2x",24,0,15)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("ScatterShotSplitter2x",24,0,-15)
		FSPI H 3 Bright A_CustomMissile("ScatterShotSplitter2x",24,0,10)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("ScatterShotSplitter2x",24,0,-30)
		FSPI H 3 Bright A_CustomMissile("ScatterShotSplitter2x",24,0,30)
		FSPI G 0 A_FaceTarget
		FSPI H 1 Bright
		TNT1 A 0 A_CheckSight("See")
		Goto Tier2Missile2xSplitterShot+1
	Tier2MissileNormalShot:
		FSPI A 4 A_FaceTarget
		FSPI A 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("ScatterShot",24,0,0)
		FSPI H 3 Bright A_CustomMissile("ScatterShot",24,0,15)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("ScatterShot",24,0,-15)
		FSPI H 3 Bright A_CustomMissile("ScatterShot",24,0,10)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("ScatterShot",24,0,-30)
		FSPI H 3 Bright A_CustomMissile("ScatterShot",24,0,30)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("ScatterShot",24,0,-10)
		FSPI H 3 Bright A_CustomMissile("ScatterShot",24,0,25)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("ScatterShot",24,0,5)
		FSPI H 3 Bright A_CustomMissile("ScatterShot",24,0,-5)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("ScatterShot",24,0,0)
		FSPI H 3 Bright A_CustomMissile("ScatterShot",24,0,-45)  
		FSPI H 3 Bright A_CustomMissile("ScatterShot",24,0,40)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("ScatterShot",24,0,-20)
		FSPI H 3 Bright A_CustomMissile("ScatterShot",24,0,10)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("ScatterShot",24,0,-35)
		FSPI H 3 Bright A_CustomMissile("ScatterShot",24,0,50)
		FSPI H 1 Bright
		TNT1 A 0 A_CheckSight("See")
		Goto Tier2MissileNormalShot+1
	Tier2MissileRailShot:
		FSPI A 4 A_FaceTarget
		FSPI A 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,0)
		FSPI H 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,15)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,-15)
		FSPI H 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,10)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,-30)
		FSPI H 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,30)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,-10)
		FSPI H 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,25)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,5)
		FSPI H 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,-5)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,0)
		FSPI H 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,-45)  
		FSPI H 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,40)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,-20)
		FSPI H 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,10)
		FSPI G 0 A_FaceTarget
		FSPI G 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,-35)
		FSPI H 3 Bright A_CustomMissile("MultiMonsterRailshot",24,0,50)
		FSPI H 1 Bright
		TNT1 A 0 A_CheckSight("See")
		Goto Tier2MissileRailShot+1
	//Tier3	
	Tier3MissileNormalShot:
		ARAC A 10 Bright A_FaceTarget
		ARAC G 2 Bright 
		ARAC H 5 Bright A_CustomMissile("AracknightMissile",26,0,0)
		ARAC G 2 Bright
		ARAC H 5 Bright A_CustomMissile("AracknightMissile",26,0,0)
		ARAC G 2 Bright
		ARAC H 5 Bright A_CustomMissile("AracknightMissile",26,0,0)
		ARAC H 2 Bright
		ARAC H 5 Bright A_CustomMissile("AracknightMissile",26,0,0)
		ARAC H 2 Bright
		ARAC H 5 Bright A_CustomMissile("AracknightMissile",26,0,0)
		ARAC A 6 
		TNT1 A 0 A_CheckSight("See")
		Goto Tier3MissileNormalShot+1
	Tier3MissileTripleShot:
		ARAC A 20 Bright A_FaceTarget
		ARAC G 1 Bright
		ARAC G 0 Bright A_recoil(15)
		ARAC H 0 Bright A_CustomMissile("AracknightMissile",26,0,0)
		ARAC A 0 Bright A_FaceTarget
		ARAC H 0 Bright A_CustomMissile("AracknightMissile",26,0,0)
		ARAC A 0 Bright A_FaceTarget
		ARAC H 0 Bright A_CustomMissile("AracknightMissile",26,0,0)
		ARAC A 6
		TNT1 A 0 A_CheckSight("See")
		Goto Tier3MissileTripleShot+1
	Tier3MissileHomingShot:
		ARAC A 20 Bright A_FaceTarget
		ARAC G 3 Bright
		ARAC G 0 Bright A_recoil(15)
		ARAC H 5 Bright A_CustomMissile("SeekerAracknightMissile",26,0,0)
		ARAC A 5 Bright A_FaceTarget
		ARAC H 5 Bright A_CustomMissile("SeekerAracknightMissile",26,0,0)
		ARAC A 5 Bright A_FaceTarget
		ARAC H 5 Bright A_CustomMissile("SeekerAracknightMissile",26,0,0)
		ARAC A 6 
		TNT1 A 0 A_CheckSight("See")
		Goto Tier3MissileHomingShot+4
	Tier3Missile2xSplitterShot:
		ARAC A 10 Bright A_FaceTarget
		ARAC G 2 Bright 
		ARAC H 5 Bright A_CustomMissile("AracknightMissileSplitter2x",26,0,0)
		ARAC G 2 Bright
		ARAC H 5 Bright A_CustomMissile("AracknightMissileSplitter2x",26,0,0)
		ARAC G 2 Bright
		ARAC H 5 Bright A_CustomMissile("AracknightMissileSplitter2x",26,0,0)
		ARAC H 2 Bright
		ARAC H 5 Bright A_CustomMissile("AracknightMissileSplitter2x",26,0,0)
		ARAC H 2 Bright
		ARAC H 5 Bright A_CustomMissile("AracknightMissileSplitter2x",26,0,0)
		ARAC A 6 
		TNT1 A 0 A_CheckSight("See")
		Goto Tier3Missile2xSplitterShot+1
	Tier3Missile4xSplitterShot:
		ARAC A 10 Bright A_FaceTarget
		ARAC G 2 Bright 
		ARAC H 5 Bright A_CustomMissile("AracknightMissileSplitter4x",26,0,0)
		ARAC G 2 Bright
		ARAC H 5 Bright A_CustomMissile("AracknightMissileSplitter4x",26,0,0)
		ARAC G 2 Bright
		ARAC H 5 Bright A_CustomMissile("AracknightMissileSplitter4x",26,0,0)
		ARAC H 2 Bright
		ARAC H 5 Bright A_CustomMissile("AracknightMissileSplitter4x",26,0,0)
		ARAC H 2 Bright
		ARAC H 5 Bright A_CustomMissile("AracknightMissileSplitter4x",26,0,0)
		ARAC A 6 
		TNT1 A 0 A_CheckSight("See")
		Goto Tier3Missile4xSplitterShot+1
	Tier3Missile5xSplitterShot:
		ARAC A 10 Bright A_FaceTarget
		ARAC G 2 Bright 
		ARAC H 5 Bright A_CustomMissile("AracknightMissileSplitter5x",26,0,0)
		ARAC G 2 Bright
		ARAC H 5 Bright A_CustomMissile("AracknightMissileSplitter5x",26,0,0)
		ARAC G 2 Bright
		ARAC H 5 Bright A_CustomMissile("AracknightMissileSplitter5x",26,0,0)
		ARAC H 2 Bright
		ARAC H 5 Bright A_CustomMissile("AracknightMissileSplitter5x",26,0,0)
		ARAC H 2 Bright
		ARAC H 5 Bright A_CustomMissile("AracknightMissileSplitter5x",26,0,0)
		ARAC A 6 
		TNT1 A 0 A_CheckSight("See")
		Goto Tier3Missile5xSplitterShot+1	
	Tier3MissileRailShot:
		TNT1 A 0 A_jump (50,"Tier3MissileHomingShot")
		ARAC A 10 Bright A_FaceTarget
		ARAC G 2 Bright A_PlayweaponSound("weapons/laser")
		ARAC H 5 Bright A_CustomMissile("MultiMonsterRailshot", 26, 0, random(-4,4),0)
		ARAC G 2 Bright A_PlayweaponSound("weapons/laser")
		ARAC H 5 Bright A_CustomMissile("MultiMonsterRailshot", 26, 0, random(-4,4),0)
		ARAC G 2 Bright A_PlayweaponSound("weapons/laser")
		ARAC H 5 Bright A_CustomMissile("MultiMonsterRailshot", 26, 0, random(-4,4),0)
		ARAC G 2 Bright A_PlayweaponSound("weapons/laser")
		ARAC H 5 Bright A_CustomMissile("MultiMonsterRailshot", 26, 0, random(-4,4),0)
		ARAC G 2 Bright A_PlayweaponSound("weapons/laser")
		ARAC H 5 Bright A_CustomMissile("MultiMonsterRailshot", 26, 0, random(-4,4),0)
		ARAC A 6 
		TNT1 A 0 A_CheckSight("See")
		Goto Missile+1
		
	//TierS	
	TierSMissileStandardFire:
        ARTK A 1 A_FaceTarget
        ARTK C 3 BRIGHT A_CustomMissile("TerminatorBlaster",45,32,(random(-15,15)),0)
        TNT1 A 0 BRIGHT A_CustomMissile("TerminatorBlaster",45,32,(random(-15,15)),0)
        ARTK A 1 A_FaceTarget
        ARTK E 3 BRIGHT A_CustomMissile("TerminatorBlaster",45,-29,(random(-15,15)),0)
        TNT1 A 0 BRIGHT A_CustomMissile("TerminatorBlaster",45,-29,(random(-15,15)),0)
        ARTK A 0 A_Jump(128,1) 
        goto See 
        ARTK A 0 A_CPosRefire
        goto Missile 
	TierSMissilePowerFire:
		ARTK A 1 A_FaceTarget
        ARTK D 3 BRIGHT A_CustomMissile("PowerShot",45,32,(random(-15,15)),0)
        TNT1 A 0 BRIGHT A_CustomMissile("PowerShot",45,32,(random(-15,15)),0)
        ARTK A 1 A_FaceTarget
        ARTK F 3 BRIGHT A_CustomMissile("PowerShot",45,-29,(random(-15,15)),0)
        TNT1 A 0 BRIGHT A_CustomMissile("PowerShot",45,-29,(random(-15,15)),0)
        ARTK A 0 A_Jump(128,1) 
		goto See 
        ARTK A 0 A_CPosRefire
        goto Missile 
	TierSMissileRunNGun:
		ARTK A 0 A_Jump(56,"TierSMissileStandardFire") 
		ARTK AB 20 bright A_FaceTarget
		ARTK A 1 A_setspeed(25)
	TierSMissileSpeedyTime:
		ARTK A 0 A_PlaySound ("ZPTank/Run")
        ARTK AABB 1 A_Chase
		ARTK A 0 A_Jump(80,1) 
		goto TierSMissileSpeedyTime
	TierSMissileGunTime:
		ARTK AB 3 bright A_FaceTarget
		ARTK A 1 A_setspeed(25)
		ARTK AB 1 ThrustThing(angle*256/360+64, 20, 0, 0)
		//The first line will thrust in the direction the actor is facing. 
		//Adding +64, +128, or +192 will thrust to the right, backwards, or left, respectively. 
		ARTK D 3 BRIGHT A_CustomMissile("TerminatorBlaster",45,32,(random(-15,15)),0)
        TNT1 A 0 BRIGHT A_CustomMissile("TerminatorBlaster",45,32,(random(-15,15)),0)
        ARTK A 1 A_FaceTarget
        ARTK E 3 BRIGHT A_CustomMissile("TerminatorBlaster",45,-29,(random(-15,15)),0)
        TNT1 A 0 BRIGHT A_CustomMissile("TerminatorBlaster",45,-29,(random(-15,15)),0)
		ARTK A 1 A_FaceTarget
		ARTK D 3 BRIGHT A_CustomMissile("TerminatorBlaster",45,32,(random(-15,15)),0)
        TNT1 A 0 BRIGHT A_CustomMissile("TerminatorBlaster",45,32,(random(-15,15)),0)
        ARTK A 1 A_FaceTarget
        ARTK E 3 BRIGHT A_CustomMissile("TerminatorBlaster",45,-29,(random(-15,15)),0)
        TNT1 A 0 BRIGHT A_CustomMissile("TerminatorBlaster",45,-29,(random(-15,15)),0)
		ARTK A 1 A_FaceTarget
		ARTK D 3 BRIGHT A_CustomMissile("TerminatorBlaster",45,32,(random(-15,15)),0)
        TNT1 A 0 BRIGHT A_CustomMissile("TerminatorBlaster",45,32,(random(-15,15)),0)
        ARTK A 1 A_FaceTarget
        ARTK E 3 BRIGHT A_CustomMissile("TerminatorBlaster",45,-29,(random(-15,15)),0)
        TNT1 A 0 BRIGHT A_CustomMissile("TerminatorBlaster",45,-29,(random(-15,15)),0)
		ARTK A 1 A_FaceTarget
		ARTK A 0 A_PlaySound ("ZPTank/Run")
        ARTK AABB 1 A_Chase
		ARTK AB 1 ThrustThing(angle*256/360+192, 20, 0, 0)
		//The first line will thrust in the direction the actor is facing. 
		//Adding +64, +128, or +192 will thrust to the right, backwards, or left, respectively. 
		ARTK D 3 BRIGHT A_CustomMissile("TerminatorBlaster",45,32,(random(-15,15)),0)
        TNT1 A 0 BRIGHT A_CustomMissile("TerminatorBlaster",45,32,(random(-15,15)),0)
        ARTK A 1 A_FaceTarget
        ARTK E 3 BRIGHT A_CustomMissile("TerminatorBlaster",45,-29,(random(-15,15)),0)
        TNT1 A 0 BRIGHT A_CustomMissile("TerminatorBlaster",45,-29,(random(-15,15)),0)
		ARTK A 1 A_FaceTarget
		ARTK D 3 BRIGHT A_CustomMissile("TerminatorBlaster",45,32,(random(-15,15)),0)
        TNT1 A 0 BRIGHT A_CustomMissile("TerminatorBlaster",45,32,(random(-15,15)),0)
        ARTK A 1 A_FaceTarget
        ARTK E 3 BRIGHT A_CustomMissile("TerminatorBlaster",45,-29,(random(-15,15)),0)
        TNT1 A 0 BRIGHT A_CustomMissile("TerminatorBlaster",45,-29,(random(-15,15)),0)
		ARTK A 1 A_FaceTarget
		ARTK D 3 BRIGHT A_CustomMissile("TerminatorBlaster",45,32,(random(-15,15)),0)
        TNT1 A 0 BRIGHT A_CustomMissile("TerminatorBlaster",45,32,(random(-15,15)),0)
        ARTK A 1 A_FaceTarget
        ARTK E 3 BRIGHT A_CustomMissile("TerminatorBlaster",45,-29,(random(-15,15)),0)
        TNT1 A 0 BRIGHT A_CustomMissile("TerminatorBlaster",45,-29,(random(-15,15)),0)
		ARTK A 1 A_FaceTarget
		ARTK A 1 A_setspeed(15)
		ARTK A 0 A_Jump(120,"GunTime")
		goto see
	
	Pain:
		
		TNT1 A 0 A_JumpIfInventory("TierOneArachToken",		1, "PainTier1")
		TNT1 A 0 A_JumpIfInventory("TierTwoArachToken", 	1, "PainTier2")
		TNT1 A 0 A_JumpIfInventory("TierThreeArachToken",	1, "PainTier3")
		TNT1 A 0 A_JumpIfInventory("TierSpecialArachToken", 1, "PainTierS")
	/*
		TNT1 A 0 A_Log ("Entering SpawnCheckTier!")
		TNT1 A 0 ACS_NamedExecuteAlways("PainStateCheckingArachTier",0)		
		//TNT1 A 0 A_Log ("Warning: set failed! Check yer decorate!")
		TNT1 A 0 A_Jump(256,"6Deciding")
		
	6Deciding:
		TNT1 A 0 A_Log ("Attempting to set pain type!")
		TNT1 A 1
		loop
		
		/*
		TNT1 A 0 nodelay A_JumpIf(user_ArachTierCheck == 1, "PainTier1")
		TNT1 A 0 nodelay A_JumpIf(user_ArachTierCheck == 2, "PainTier2")
		TNT1 A 0 nodelay A_JumpIf(user_ArachTierCheck == 3, "PainTier3")
		TNT1 A 0 nodelay A_JumpIf(user_ArachTierCheck == 4, "PainTierS")
		goto Pain.default
		*/
		
	PainTier1:
		RSPI I 3
		RSPI I 3 A_Pain
		TNT1 A 0 a_playsound ("monsters/bighurt",0)
		Goto See+1
	PainTier2:
		FSPI I 3
		FSPI I 3 A_Pain
		TNT1 A 0 a_playsound ("monsters/bighurt",0)
		Goto See+1
	PainTier3:
		ARAC I 3
		ARAC I 3 A_Pain
		TNT1 A 0 a_playsound ("monsters/bighurt",0)
		ARAC I 0 A_jump(80,"StaggerShot")
		Goto See+1
	PainTierS:
		 ARTK F 4 A_Pain
        TNT1 A 0 a_playsound ("monsters/bighurt",0)
		ARTK F 4
        Goto See+1
	Pain.default: 
		TNT1 A 3
		TNT1 A 3 A_Pain
		TNT1 A 0 a_playsound ("monsters/bighurt",0)
		Goto See+1
	Death:
		TNT1 A 0 A_BossDeath
		TNT1 A 0 A_NoBlocking
		
		TNT1 A 0 A_JumpIfInventory("TierOneArachToken",		1, "Tier1DeathState")
		TNT1 A 0 A_JumpIfInventory("TierTwoArachToken", 	1, "Tier2DeathState")
		TNT1 A 0 A_JumpIfInventory("TierThreeArachToken",	1, "Tier3DeathState")
		TNT1 A 0 A_JumpIfInventory("TierSpecialArachToken", 1, "TierSDeathState")
		
		/*
		TNT1 A 0 A_Log ("Entering SpawnCheckTier!")
		TNT1 A 0 ACS_NamedExecuteAlways("DeathStateCheckingArachTier",0)		
		//TNT1 A 0 A_Log ("Warning: set failed! Check yer decorate!")
		TNT1 A 0 A_Jump(256,"7Deciding")
		
	7Deciding:
		TNT1 A 0 A_Log ("Attempting to set death type!")
		TNT1 A 1
		loop
		
		/*
		TNT1 A 0 A_JumpIf(user_ArachTierCheck == 1, "Tier1DeathState")
		TNT1 A 0 A_JumpIf(user_ArachTierCheck == 2, "Tier2DeathState")
		TNT1 A 0 A_JumpIf(user_ArachTierCheck == 3, "Tier3DeathState")
		TNT1 A 0 A_JumpIf(user_ArachTierCheck == 4, "TierSDeathState")
		*/
	
	Tier1DeathState:
	Tier2DeathState:
		TNT1 A 0 a_spawnitemex ("ArachnotronModItemDropper",0,0,35)
		TNT1 AAAAA 0 A_Spawnitemex("Blood",0,0,6,0,0,0,0, SXF_NOPOINTERS| SXF_NOCHECKPOSITION)
		RSPI J 10 A_Scream
		RSPI K 7 A_NoBlocking
		RSPI LMNO 7 
		RSPI P -1 
		Stop
	Tier3DeathState:
		TNT1 A 0 a_spawnitemex ("ArachnotronModItemDropper",0,0,35)
		ARAC J 10 A_Scream
		ARAC K 7 A_NoBlocking
		ARAC LMNO 7 
		ARAC P -1 
		Stop
	TierSDeathState:
		TNT1 A 0 a_spawnitemex ("ArachnotronModItemDropper",0,0,35)
		TNT1 A 0 ThrustThingZ(0, 90, 0, 1)
		TNT1 A 0 A_SetRoll((roll + 20))
 		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
        ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll(180)
        ARTK G 4 A_Scream
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
        ARTK H 8
        ARTK I 8 
        ARTK J 8 
        ARTK K 8 A_Fall
		TNT1 A 0 A_CustomMissile("BigGenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("BigGenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GiantGenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
        ARTK L 8
        ARTK M 8 
        ARTK N -1 A_BossDeath
        Stop
	XDeath:
		TNT1 A 0 A_BossDeath
		TNT1 A 0 A_NoBlocking
		
		TNT1 A 0 A_Log ("Entering SpawnCheckTier!")
		TNT1 A 0 ACS_NamedExecuteAlways("XDeathStateCheckingArachTier",0)		
		//TNT1 A 0 A_Log ("Warning: set failed! Check yer decorate!")
		TNT1 A 0 A_Jump(256,"8Deciding")
		
	8Deciding:
		TNT1 A 0 A_Log ("Attempting to set Xdeath type!")
		TNT1 A 1
		loop
		
		/*
		TNT1 A 0 A_JumpIf(user_ArachTierCheck == 1, "Tier1XDeathState")
		TNT1 A 0 A_JumpIf(user_ArachTierCheck == 2, "Tier2XDeathState")
		TNT1 A 0 A_JumpIf(user_ArachTierCheck == 3, "Tier3XDeathState")
		TNT1 A 0 A_JumpIf(user_ArachTierCheck == 4, "TierSXDeathState")
		*/
		
		
	Tier1XDeathState:
	Tier2XDeathState:
	Tier3XDeathState:
		TNT1 A 0 a_spawnitemex ("ArachnotronModItemDropper",0,0,35)
		TNT1 AAAAA 0 A_Spawnitemex("Blood",0,0,6,0,0,0,0, SXF_NOPOINTERS| SXF_NOCHECKPOSITION)
		TNT1 AAAAA 0 A_Spawnitemex("Blood",0,0,6,0,0,0,0, SXF_NOPOINTERS| SXF_NOCHECKPOSITION)
		TNT1 A 0 A_PlaySound("MainGore/MonGoBoom")
		TNT1 AAAA 0 A_Spawnitemex("DynDoomGore_GibChucker",0,0,6,0,0,0,0, SXF_NOPOINTERS| SXF_NOCHECKPOSITION)
		XBIG A 1 A_BossDeath
		XBIG A 4 A_Stop
		XBIG B 5 A_XScream
		XBIG C 5 
		XBIG D 5 A_NoBlocking
		XBIG E 5
		TNT1 A 0 
		XBIG E -1
		Stop
	TierSXDeathState:
		TNT1 A 0 a_spawnitemex ("ArachnotronModItemDropper",0,0,35)
		TNT1 A 0 ThrustThingZ(0, 90, 0, 1)
		TNT1 A 0 A_SetRoll((roll + 20))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		ARTK G 1 A_SetRoll((roll + 20))
		ARTK G 0 A_SetRoll((roll + 20))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		ARTK G 1 A_SetRoll(180)
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
        ARTK G 4 A_Scream
		
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
        ARTK H 8 
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
        ARTK I 8 
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
        ARTK J 8 
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
        ARTK K 8 A_Fall
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
        ARTK L 8
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		//TNT1 A 0 A_SetRoll(180)
        ARTK M 8
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
		TNT1 A 0 A_CustomMissile("GiantGenericExplosionTosser",(random(-15,15)),(random(-15,15)),(random(-15,15)))
        ARTK N -1 A_BossDeath
        Stop
	Crush:
		POL5 EEEEE 1 
		POL5 E -1
		Stop	
    Raise:
		XBIG E 5
		XBIG DCBA 5
		Goto See+1
	}
}